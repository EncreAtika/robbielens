body{
    background: linear-gradient(#fcfcfc, #f3d9ca); /* Le fond de la page sera 
    dégradé(https://developer.mozilla.org/fr/docs/Web/CSS/gradient/linear-gradient)
    (ou bien :https://uigradients.com/#PurpleWhite) 
    /*color: rgb(36, 5, 128); /* Le texte de la page sera blanc */
    
}


p { /* Signifie "je veux que tous les paraghraphes s'affiche en police arial sans-serif . */
    font-family: Arial, sans-serif;
    font-size: 24px;
    /* ci dessus 24px correspond à la valeur 24 pixels. c’est très précis, mais il est 
    conseillé de n'utiliser cette méthode que si on sait sur quelle taille d'écran ou 
    dimension d'impression une personne verra le contenu de la page, car on risque 
    d'indiquer une taille trop petite pour certains lecteurs. */

    /*Indiquer une taille relative a l'avantage d'être plus souple, elle s'adapte, 
    selon les tailles d'écrans, plus facilement aux préférences des visiteurs.*/

    /*Une valeur absolue en pixel comme 16px est fixe. C'est comme s'il était demandé
    d'indiquer la taille du texte en millimètres. S'il est choisi de mettre la taille
    d'un texte à 2 millimètres et qu'on regarde la page web depuis un smartphone
    il est possible de pouvoir le lire. Mais, si le site web s'affiche sur l'écran 
    d'un stadium, ce sera illisible. C'est pour cela qu'il est 
    recommandé d'utiliser une taille relative (em plutôt que px). 16 pixels est une 
    taille standard pour lire un texte mais peut ne pas suffire selon l'écran sur 
    lequel il s'affiche. Une valeur relative permet de choisir une taille de police 
    de la même manière qu'on utiliserait un pourcentage.*/
    
    font-style: italic;
    text-align:justify;
    color:rgb(21, 6, 78); 
    background-color: rgb(255, 247, 132);
    
    /* Les modèles de boites. Ici il s'agit des blocs qui peuvent se superposer .
    Dans ce cas les demandes padding et margin sont équivalentes pour les 4 cotés. 
    Sauf qu'on peut aussi choisi de modifier les marges inérieurs différemment 
    selon les côtés. Avec par exemple :  
    padding-top: 50ox;
    padding-bottom: 100px;
    padding-left: 20px;
    padding-right: 200 px; */
    
    margin: 50px;
    padding: 50px;
 }

 h2{
    text-align: center;
    font-size:40px;
    color:darkblue;
    background-color: linear-gradient(to right #39a1bb, #eaecc6 );
    text-shadow: 6px 6px 15px rgb(115, 3, 94);
 }


h1{
    color:#821473;
    font-family: 'Lobster Two', cursive;
    font-size: 3em;
    /* Il y a plusieurs moyens d'indiquer une valeur relative. Une des plus fréquentes
     consiste à indiquer la taille en em.
        -Le texte a une taille normale avec  1em .
        -Le texte est plus grand avec une valeur supérieure à 1, comme  1.3em .
        -Le texte est plus petit avec une valeur inférieure à 1, comme  0.8em.
    Attention tout de même à la syntaxe : pour les nombres décimaux, il faut mettre 
    un point et non une virgule. Vous devez donc écrire 1.4em et non pas  1,4em  ! */
    text-align: center;
    color:azure white;
    padding: 150px;
    background-image: url("images_exercices/colombes-papier-origami-by_macrovector-freepik.jpg");
    background-attachment: fixed; 
    /*background-size : cover; l'image sera positionnée par défaut en haut et en ajoutant 
    "background-position: center; permet de l'image en arrière plan */
    opacity: 0.5;
    
}
    
.ma_classe{
    color:rgb(21, 6, 78); 
}


.ma_classe_2{
    color :rgb(115, 3, 94);
}

.introduction{
    font-weight: 700; 
    text-decoration: double;
}

ol{
    text-align: center;
    border: 2px solide rgb(242, 241, 164);
    border-radius: 10px 20px 40 px 60 px;
    box-shadow: 6px 6px 15px rgb(115, 3, 94);

    /* Pour arrondir la bordure des blocs : "border-radius" qui 
    est une propriété dite raccourcie. C'est à dire qu'elle permet
    de définir la valeur de plusieurs propriétés via une seule 
    déclaration.*/

    /* Pour créer un style différent pour chaque bordure d'un cadre,
    border-bottom: 2px solid rgb(240, 242, 173);
    border-right: 6px dotted deeppink ;
    border-left: 3px dotted rebeccapurple;
    border-top: 4px solid orange; */
    
}

em{
    font-weight: 700;
    color: #818ee6;
}

mark {
    background-color: rgb(233, 215, 231);
    color:rgb(127, 56, 235);
}

.carre_bordure{
   text-align: center;
   border: double 4px  darkslateblue;
   border-radius: 52% 48% 50% 50% / 57% 55% 45% 43% ;
   width: 580; height: 170;
}

img:hover{
    opacity: 0.5;
}

a{
    background-color: #023e8a;
    color: white;
    display: block;
    width: 300px;
    height: 100px;

}

a:hover{
    color:deeppink;
    text-decoration: underline;
    /* permet de colorer les lettre du lien en rose lorsque la souris passe dessus. Le lien est aussi souligné */
    
}
  

a:active{
    text-decoration-color: greenyellow;
    /* lorsque la souris clique sur le lien un effet "greenyello" apparait le temps du clqiue donc très rapide. */
}

a:focus{
    background-color: rgb(27, 207, 147); 
    color: rgb(207, 22, 22);  
    outline-color: rgb(74, 13, 99);
    /*lorsque le lien est sélectionné avec tab il y a un effet encadré qui se met en place avec les couleurs choisies
    cela permet de faire ressortir ce qui est séléctionné et donc de se repérer facilement. Très pratqiue pour
    un formulaire par exemple.*/
}

img:hover +h3 {

    color : aqua;
}
/*  la fonstionnalié sibllings ou selecteur de voisin permet de faire interagir simultanément deux selecteurs voisins ou deux 
élèments issus du même parent. Dans le code est précisé l'élèment principal (img) auquel est ajouté l'élèment cible (+ h3)
est ajouté la couleur du h3 qui apparait au survol de l'image. Dans ce cas ça ne fonctionne pas très bien*/

.banniere {
    padding: 100px 0;
    background:url("images_exercices/colombes-papier-origami-by_macrovector-freepik.jpg");
    background-size: cover;
    background-position: center;
    width: 500px;
    margin: auto;
}

.container{
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    height: 600px;
    align-items: center;
    flex-wrap:wrap; /* Permet d'activer ou de déactiver le retour automatique à la ligne des élèments. très pratique 
    quand il s'agit d'un site web qui devra s'asdapter aux nombreuses tailles d'écran.*/
    /* gap: 20px; -->  La proprité gap permet d'ajouter des espaces entre les élèments.*/
}

.item{
    flex: 1;
    margin: 10px;
    padding: 20px;
    background-color: #f2f2f2;
  }

  .container_2{
    display: flex;
    flex-direction: row;
    justify-content: center;
 }

  .one{
    background-color: #a65c9c;
    color: #f2f2f2;
    margin: 10px;
    padding: 20px;
    order:3;
    
  }

  .two{
    background-color: rgb(233, 255, 39);
    color: #ff7e7e;
    margin: 10px;
    padding: 20px;
    order: 1;
    
}

.three{
    background-color: #c0fcff;
    color: #620909;
    margin: 10px;
    padding: 20px;
    order: 2;
    flex: 1;
    align-items: last baseline;
}

.conteneur{
     /* display: inline-block;*/
    display: grid; 
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 100px 100px 100px 100px 100px;
    grid-gap: 10px;
}


.conteneur_2{
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 100px 100px 100px 100px 100px;
    grid-gap: 10px;
}   

.element_one{
    background-color: rgb(105, 80, 206);
    color: hsl(70, 100%, 85%);
    margin: 10px;
    padding: 10px;
    grid-column-start: 1;
    grid-column-end: 4;
    /* Ou pour les deux actions précédentes on peut le rédiger ainsi : grid-column: 1/4; */
    grid-row-start: 1;
    border: 1px solid black;
    border-radius: 10px;
    
}


.element_two{
    background-color: rgb(105, 80, 206);
    color: hsl(70, 100%, 85%);
    margin: 10px;
    padding: 10px;
    grid-column-start: 2;
    grid-column-end: 6;
    border: 1px solid black;
    border-radius: 10px; 
}

.element_three{
    background-color: rgb(105, 80, 206);
    color: hsl(70, 100%, 85%);
    margin: 10px;
    padding: 10px;
    grid-column-start: 3;
    grid-column-end: 2;
    border: 1px solid black;
    border-radius: 10px;
}

.element_four{
    background-color: rgb(105, 80, 206);
    color: hsl(70, 100%, 85%);
    margin: 10px;
    padding: 10px;
    grid-column-start: 4;
    grid-column-end: 3;
    border: 1px solid black;
    border-radius: 10px;
}

.element_five{
    background-color: rgb(105, 80, 206);
    color: hsl(70, 100%, 85%);
    margin: 10px;
    padding: 10px;
    grid-column-start: 5;
    grid-column-end: 2;
    border: 1px solid black;
    border-radius: 10px;
}

.element_six{
    background-color: rgb(105, 80, 206);
    color: hsl(70, 100%, 85%);
    margin: 10px;
    padding: 10p;
    grid-column-start: 6;
    grid-column-end: 6;
    height: 2.7em;
    border: 1px solid black;
    border-radius: 10px;
    
}

.element_seven{
    background-color: rgb(105, 80, 206);
    color: hsl(70, 100%, 85%);
    margin: 10px;
    padding: 10px;
    grid-column-start: 7;
    grid-column-end: 2;
    border: 1px solid black;
    border-radius: 10px;
   
}

.element_eight{
    background-color: rgb(105, 80, 206);
    color: hsl(70, 100%, 85%);
    margin: 10px;
    padding: 10px;
    grid-column-start: 8;
    grid-column-end: 2;
    border: 1px solid black;
    border-radius: 10px;
    
}

.element_nine{
    background-color: rgb(105, 80, 206);
    color: hsl(70, 100%, 85%);
    margin: 10px;
    padding: 10px;
    grid-column-start: 6;
    grid-column-end: 2;
    border: 1px solid black;
    border-radius: 10px;
   
}

.element_ten{
    background-color: hsl(70, 100%, 85%);
    color: rgb(105, 80, 206);
    margin: 10px;
    padding: 10px;
    grid-column-start: 10;
    grid-column-end: auto;
    border: 1px solid black;
    border-radius: 10px;
}

.element_eleven{
    background-color: hsl(70, 100%, 85%);
    color: rgb(105, 80, 206);
    margin: 10px;
    padding: 10px;
    grid-column-start: 11;
    grid-column-end: auto;
    border: 1px solid black;
    border-radius: 10px;
} 


.element_twelve{
    background-color: hsl(70, 100%, 85%);
    color: rgb(105, 80, 206);
    margin: 10px;
    padding: 10px;
    grid-column-start: 12;
    grid-column-end: auto;
    border: 1px solid black;
    border-radius: 10px;
} 


.element_thirteen{
    background-color: hsl(70, 100%, 85%);
    color: rgb(105, 80, 206);
    margin: 10px;
    padding: 10px;
    grid-column-start: 13;
    grid-column-end: auto;
    border: 1px solid black;
    border-radius: 10px;
}

table {
    margin: auto;
    border-collapse: collapse;
  }
  
  th, td {
    border: 2px solid royalblue; /* Bordure de la branche 'main' */
    padding: 15px;
  }
  
  .test_titre_tableau {
    caption-side: top;
    color: #a65c9c;
    font-family: 'Lobster Two', cursive;
    font-size: 24px;
  }
  
  .grand_tableau {
    background-color: #e9f9f9;
    font-family: Arial;
    text-align: center;
  }
  
  .en_fusion {
    font-family: Arial;
    text-align: left;
    border-collapse: collapse;
    margin: auto;
    background-color: #f9e9f8;
  }
  
   



  